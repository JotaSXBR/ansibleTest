---
- name: "Configuração Inicial do Servidor"
  hosts: servers
  become: true
  # Variáveis agora são fornecidas via group_vars/all.yml para portabilidade.

  tasks:
    # 1. Atualização do sistema e pacotes base
    - name: "Atualizar cache do apt e atualizar todos os pacotes"
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600
      tags: [system, packages]

    - name: "Definir URLs de repositório APT específicas da arquitetura"
      ansible.builtin.set_fact:
        apt_repo_url: "{{ 'http://ports.ubuntu.com/ubuntu-ports' if 'arm' in ansible_architecture or 'aarch64' in ansible_architecture else 'http://archive.ubuntu.com/ubuntu' }}"
        apt_security_url: "{{ 'http://ports.ubuntu.com/ubuntu-ports' if 'arm' in ansible_architecture or 'aarch64' in ansible_architecture else 'http://security.ubuntu.com/ubuntu' }}"
      tags: [system, packages]

    - name: "Garantir que os repositórios universe e security estejam habilitados"
      ansible.builtin.apt_repository:
        repo: "{{ item }}"
        state: present
      loop:
        - "deb {{ apt_repo_url }} {{ ansible_distribution_release }} universe"
        - "deb {{ apt_security_url }} {{ ansible_distribution_release }}-security main restricted universe multiverse"
      tags: [system, packages]

    - name: "Atualizar cache do apt após adicionar novos repositórios"
      ansible.builtin.apt:
        update_cache: yes
      tags: [system, packages]

    - name: "Instalar pacotes comuns e necessários"
      ansible.builtin.apt:
        name:
          # Pacotes base
          - vim
          - curl
          - wget
          - git
          - ufw
          - fail2ban
          - unattended-upgrades
          - logwatch
          # Endurecimento
          - auditd
          - audispd-plugins
          - sysstat
          - rkhunter
          - lynis
          - debsums
          - jq
          - openssl
        state: present
      tags: [system, packages]

    # 2. Criação do arquivo de swap
    - name: "Verificar se o arquivo de swap existe"
      ansible.builtin.stat:
        path: /swapfile
      register: swap_file_check
      tags: [system, swap]

    - name: "Criar arquivo de swap"
      ansible.builtin.command: "fallocate -l {{ swap_file_size }} /swapfile"
      when: not swap_file_check.stat.exists
      tags: [system, swap]

    - name: "Definir permissões do arquivo de swap"
      ansible.builtin.file:
        path: /swapfile
        mode: '0600'
      when: not swap_file_check.stat.exists
      tags: [system, swap]

    - name: "Formatar arquivo de swap"
      ansible.builtin.command: mkswap /swapfile
      when: not swap_file_check.stat.exists
      tags: [system, swap]

    - name: "Ativar swap"
      ansible.builtin.command: swapon /swapfile
      when: not swap_file_check.stat.exists
      tags: [system, swap]

    - name: "Adicionar swap no fstab"
      ansible.builtin.lineinfile:
        path: /etc/fstab
        line: "/swapfile none swap sw 0 0"
        state: present
      tags: [system, swap]

    - name: "Ajustar swappiness"
      ansible.posix.sysctl:
        name: vm.swappiness
        value: '10'
        state: present
        reload: yes
      tags: [system, swap]

    # 3. Gerenciamento de usuários
    # NOTA: A criação do usuário `deploy` e o hardening do SSH agora devem ser executados manualmente antes da execução do playbook.

    # 4. Configuração do firewall (UFW)
    - name: "Definir políticas padrão do UFW"
      community.general.ufw:
        default: "{{ item.policy }}"
        direction: "{{ item.direction }}"
      loop:
        - { direction: 'incoming', policy: 'deny' }
        - { direction: 'outgoing', policy: 'allow' }
      tags: [system, firewall]

    - name: "Aplicar regras UFW (SSH, HTTP, HTTPS)"
      community.general.ufw:
        rule: "{{ item.rule }}"
        port: "{{ item.port }}"
        proto: tcp
      loop:
        - { rule: 'limit', port: '{{ ssh_port }}' }
        - { rule: 'allow', port: '80' }
        - { rule: 'allow', port: '443' }
      tags: [system, firewall]

    - name: "Habilitar UFW"
      community.general.ufw:
        state: enabled
      tags: [system, firewall]

    # 5. Endurecimento de segurança
    - name: "Ativar e iniciar o serviço Fail2Ban"
      ansible.builtin.service:
        name: fail2ban
        enabled: yes
        state: started
      tags: [system, security]

    - name: "Habilitar atualizações automáticas de segurança"
      ansible.builtin.copy:
        src: files/20auto-upgrades
        dest: /etc/apt/apt.conf.d/20auto-upgrades
        owner: root
        group: root
        mode: '0644'
      tags: [system, security]

    - name: "Proteger memória compartilhada"
      ansible.builtin.lineinfile:
        path: /etc/fstab
        line: "tmpfs /run/shm tmpfs ro,noexec,nosuid 0 0"
        state: present
      notify: Reboot Server
      tags: [system, security]
      
    - name: "Endurecer definições de login"
      ansible.builtin.lineinfile:
        path: /etc/login.defs
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: '^UMASK', line: 'UMASK           027' }
        - { regexp: '^ENCRYPT_METHOD', line: 'ENCRYPT_METHOD SHA512' }
      tags: [system, security]

    - name: "Definir rodadas mínimas para criptografia de senhas SHA"
      ansible.builtin.lineinfile:
        path: /etc/login.defs
        line: "SHA_CRYPT_MIN_ROUNDS 500000"
        state: present
      tags: [system, security]

    - name: "Desabilitar core dumps"
      ansible.builtin.copy:
        src: files/99-disable-coredumps.conf
        dest: /etc/security/limits.d/99-disable-coredumps.conf
        owner: root
        group: root
        mode: '0644'
      tags: [system, security]

    - name: "Desabilitar protocolos de rede incomuns"
      ansible.builtin.copy:
        src: files/99-disable-uncommon-net.conf
        dest: /etc/modprobe.d/99-disable-uncommon-net.conf
        owner: root
        group: root
        mode: '0644'
      tags: [system, security]
      
    - name: "Adicionar banner legal"
      ansible.builtin.copy:
        src: files/issue_banner
        dest: "{{ item }}"
        owner: root
        group: root
        mode: '0644'
      loop:
        - /etc/issue
        - /etc/issue.net
      tags: [system, security]
    
    # 6. Configuração do Auditd
    - name: "Copiar regras personalizadas do auditd"
      ansible.builtin.copy:
        src: files/99-custom.rules
        dest: /etc/audit/rules.d/99-custom.rules
        owner: root
        group: root
        mode: '0644'
      notify: Reiniciar auditd
      tags: [system, security, auditd]

    # 6. Hardening adicional baseado em relatório Lynis
    - name: "Instalar pacotes recomendados (apt-listchanges, apt-show-versions, libpam-pwquality)"
      ansible.builtin.apt:
        name:
           - apt-listchanges
           - apt-show-versions
           - libpam-pwquality
        state: present
        update_cache: yes
      tags: [system, lynis]

    - name: "Copiar arquivo jail.local padrão para Fail2Ban"
      ansible.builtin.copy:
        src: files/jail.local
        dest: /etc/fail2ban/jail.local
        owner: root
        group: root
        mode: '0644'
      notify: Reiniciar Fail2Ban
      tags: [system, lynis]

    - name: "Configurar parâmetros do Postfix (compatível sem coleção)"
      ansible.builtin.command: "postconf -e {{ item }}"
      loop:
        - "smtpd_banner=$myhostname ESMTP"
        - "disable_vrfy_command=yes"
      notify: Reiniciar Postfix
      tags: [system, lynis]

    - name: "Aplicar parâmetros sysctl de hardening em arquivo dedicado"
      ansible.builtin.copy:
        src: files/99-hardening.conf
        dest: /etc/sysctl.d/99-hardening.conf
        owner: root
        group: root
        mode: '0644'
      notify: Aplicar sysctl
      tags: [system, lynis]

    - name: "Configurar needrestart para modo automático"
      ansible.builtin.copy:
        src: files/99-needrestart.conf
        dest: /etc/needrestart/conf.d/99-ansible.conf
        owner: root
        group: root
        mode: '0644'
      tags: [system, lynis]

    # 7. Instalação do Docker
    - name: "Instalar dependências para o repositório Docker"
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present
        update_cache: yes
      tags: [docker]

    - name: "Garantir diretório /etc/apt/keyrings existe"
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
      tags: [docker]

    - name: "Adicionar chave GPG oficial do Docker"
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
      tags: [docker]

    - name: "Adicionar repositório Docker à lista do APT"
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ ansible_architecture == 'x86_64' or ansible_architecture == 'amd64' | ternary('amd64','arm64') }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        filename: docker
        state: present
      tags: [docker]

    - name: "Atualizar cache do APT após adicionar repositório Docker"
      ansible.builtin.apt:
        update_cache: yes
      tags: [docker]

    - name: "Instalar Docker e componentes"
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      tags: [docker]

    - name: "Habilitar e iniciar serviço Docker"
      ansible.builtin.service:
        name: docker
        enabled: yes
        state: started
      tags: [docker]

    - name: "Adicionar usuário deploy ao grupo docker"
      ansible.builtin.user:
        name: deploy
        groups: docker
        append: yes
      tags: [docker]

  handlers:
    - name: "Reiniciar Servidor"
      ansible.builtin.reboot:
        msg: "Rebooting server to apply changes"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: whoami
    
    - name: "Reiniciar auditd"
      ansible.builtin.service:
        name: auditd
        state: restarted

    - name: "Reiniciar Fail2Ban"
      ansible.builtin.service:
        name: fail2ban
        state: restarted

    - name: "Reiniciar Postfix"
      ansible.builtin.service:
        name: postfix
        state: restarted

    - name: "Aplicar sysctl"
      ansible.builtin.command: sysctl --system
      changed_when: false 